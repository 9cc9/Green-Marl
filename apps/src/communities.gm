Procedure communities(G : Graph, com : Node_Property<Int>(G))
{
	//as described in 'Near linear time algorithm to detect community structures in large-scale networks' by Raghavan et al

	//initialize the labels for all nodes in the network
	Int label = 0;
	For(n : G.Nodes) {
		n.com = label;
		label++;
	}

	Bool continue = True;
	Int iterations = 0;
	While(continue) {	
		For(x : G.Nodes) {	//replace this by an iteration over all nodes in random order
			//adjust label
			Int max = Max(n : x.Nbrs) { Count(n2 : x.Nbrs) (n.com == n2.com) };			
			If(max > 0) {	// max <= 0 => x has no neighbors
				Foreach(n : x.Nbrs) ( max == Count(n2 : x.Nbrs) (n.com == n2.com) )
					x.com = n.com;
			}
		}
		continue = False;
		Foreach(x : G.Nodes) {
			// can I stop?
			Int max = Max(n : x.Nbrs) { Count(n2 : x.Nbrs) (n.com == n2.com) };
			Int myCount = Count(n : x.Nbrs) (x.com == n.com);
			If(myCount < max) {
				continue = True;
			}
		}
		iterations++;
	}

	[printf("Finished after %d iterations\n", iterations)];
}
