
// This routine is, in fact, BFS 
Procedure sssp(G:Graph, dist:N_P<Int>(G), len:E_P<Int>(G), root: Node(G))
{
    N_P<Bool>(G) updated;
    N_P<Bool>(G) updated_nxt;
    N_P<Int> (G) dist_nxt;
    Bool fin = False;

    Foreach(n:G.Nodes) {
        n.dist = (n==root) ? 0 : +INF;
        n.dist_nxt = (n == root) ? 0 : +INF;
        n.updated = (n == root) ? True: False;
        n.updated_nxt = False;
    }

    While(!fin) {
        fin = True;

        Foreach(n: G.Nodes)(n.updated) {
            Foreach(s: n.Nbrs) {
                Edge(G) e = s.ToEdge(); // the edge to s
                // updated_nxt becomes true only if dist_nxt is actually updated
                <s.dist_nxt; s.updated_nxt> min= <n.dist + e.len; True>; 
            }
        }

        G.dist = G.dist_nxt;
        G.updated = G.updated_nxt;
        G.updated_nxt = False;
        fin = ! Exist(n: G.Nodes){n.updated};
    }
}
