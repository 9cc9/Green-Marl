
// This routine is, in fact, BFS 
Procedure sssp(G:Graph, dist:N_P<Int>(G), root: Node(G))
{
    N_P<Bool>(G) updated;
    N_P<Bool>(G) updated_nxt;
    N_P<Int> (G) dist_nxt;
    Bool fin = False;

    // Set for every node in the graph
    G.dist     = (G==root) ? 0 : +INF;
    G.updated  = (G==root) ? True: False;
    G.dist_nxt = G.dist;
    G.updated_nxt = False;

    While(!fin) {
        fin = True;

        Foreach(n: G.Nodes)(n.updated) {
            Foreach(s: n.Nbrs) {
                // updated_nxt becomes true only if dist_next is actually updated
                <s.dist_nxt; s.updated_nxt> min= <n.dist +1; True>; 
            }
        }

        G.dist = G.dist_nxt;
        G.updated = G.updated_nxt;
        G.updated_nxt = False;
        fin = ! Exist(n: G.Nodes){n.updated};
    }
}
